import{_ as i}from"./slidev/VClick-Dy34bnZs.js";import{_ as p}from"./slidev/VClicks-67RMJ3Dk.js";import{o as r,c as u,k as e,g as _,l as n,q as h,s as m,A as t,e as o}from"./modules/vue-D4SXC02w.js";import{_ as d}from"./default-Bet583MZ.js";import{u as f,f as g}from"./slidev/context-DHqUi6Wg.js";import"./index-Bj8H3ufz.js";import"./modules/shiki-T7-tTmNb.js";import"./big-circle-BcQR0eat.js";const k=o("h1",null,"Application (hApp)",-1),A=o("blockquote",null,[o("p",null,"a collection of back end and optionally front end components that comprise something a Holochain user can interact with."),o("p",null,[o("a",{href:"https://developer.holochain.org/resources/glossary/#application-app",target:"_blank"},"Glossary: Holochain application (hApp)")])],-1),b=o("ul",null,[o("li",null,"a collection of components a Holochain user can install and run"),o("li",null,"has one or more packages of executable code (DNA)"),o("li",null,"(optionally) UI code")],-1),$=o("p",null,[o("strong",null,"like a docker-compose file packaged with executables for the containers")],-1),x={__name:"building-blocks.md__slidev_4",setup(C){const{$slidev:v,$nav:w,$clicksContext:a,$clicks:N,$page:y,$renderContext:I,$frontmatter:l}=f();return a.setup(),(T,B)=>{const s=p,c=i;return r(),u(d,h(m(t(g)(t(l),3))),{default:e(()=>[k,A,_(` 
Instructor Notes:
- The hApp is the complete package that users interact with
- In Challenge 1, students will work with a complete hApp (jokes application)
- The docker-compose analogy helps students understand the bundling concept
- Emphasize that a hApp can contain multiple DNAs (though Challenge 1 has just one)
- The UI is optional but most hApps (including Challenge 1) include one
`),n(s,null,{default:e(()=>[b]),_:1}),n(c,null,{default:e(()=>[$]),_:1})]),_:1},16)}}},E=x;export{E as default};
