import{_ as l}from"./slidev/VClicks-67RMJ3Dk.js";import{o as c,c as d,k as t,g as u,l as n,q as h,s as p,A as s,e,a9 as i}from"./modules/vue-D4SXC02w.js";import{_ as m}from"./default-Bet583MZ.js";import{u as _,f as g}from"./slidev/context-DHqUi6Wg.js";import"./index-Bj8H3ufz.js";import"./modules/shiki-T7-tTmNb.js";import"./big-circle-BcQR0eat.js";const f=e("h1",null,"Network",-1),k=e("blockquote",null,[e("p",null,"a collection of nodes gossiping with each other to form a validating DHT"),e("p",null,[e("a",{href:"https://developer.holochain.org/resources/glossary/#network",target:"_blank"},"Glossary: Network")])],-1),w=e("ul",null,[e("li",null,"each DNA has its own network"),e("li",null,[i("the hash of the DNAs compiled integrity code plus "),e("a",{href:"https://developer.holochain.org/resources/glossary/#dna-modifiers",target:"_blank"},"DNA modifiers"),i(" is the unique network address")]),e("li",null,"modifying any integrity code creates a completely separate network")],-1),y=e("p",null,[e("strong",null,"migrating between networks is possible but expensive and non-trivial")],-1),N=e("p",null,[e("strong",null,"deterministic compilation of integrity code is important (and hard)")],-1),v={__name:"building-blocks.md__slidev_9",setup(b){const{$slidev:$,$nav:x,$clicksContext:a,$clicks:T,$page:A,$renderContext:C,$frontmatter:r}=_();return a.setup(),(D,P)=>{const o=l;return c(),d(m,h(p(s(g)(s(r),8))),{default:t(()=>[f,k,u(` 
Instructor Notes:
- Each DNA has its own network, which is a key architectural choice in Holochain
- The network is identified by the hash of the DNA's integrity code
- This means changes to integrity code create a completely new network
- This fact is crucial for students to understand, especially for app versioning
- The warnings about migration and deterministic compilation are important practical considerations
- In Challenge 1, students will see a simulated network in the Playground
`),n(o,null,{default:t(()=>[w]),_:1}),n(o,null,{default:t(()=>[y,N]),_:1})]),_:1},16)}}},G=v;export{G as default};
